package com.jrsii.view.backend;


import com.jrsii.main.JrsiiUI;
import com.jrsii.view.frontend.Admin_BenutzerEntfernen;
import com.jrsii.view.frontend.Admin_KennwortAendern;
import com.jrsii.view.frontend.Admin_NeueBenutzerHinzufuegen;
import com.jrsii.view.frontend.Admin_NeuebenutzernameHinzufuegenBestaetigen;
import com.jrsii.view.frontend.Login;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Panel;
import com.vaadin.ui.VerticalLayout;


public class AdminPage extends CustomComponent implements View {
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
//	public DataNeueBenutzerHinzufuegen dataNeueBenutzerHinzufuegen = new DataNeueBenutzerHinzufuegen();
	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_Main;

	@AutoGenerated
	private VerticalLayout verticalLayout_Right;

	@AutoGenerated
	private Panel panel_Content;

	@AutoGenerated
	private VerticalLayout verticalLayout_Panel;

	@AutoGenerated
	private VerticalLayout verticalLayout_Left;

	@AutoGenerated
	private Button button_abmelden;

	@AutoGenerated
	private Button button_benutzerEntfernen;

	@AutoGenerated
	private Button button_neueBenutzerHinzufgen;

	@AutoGenerated
	private Button button_administrator;
	
	public static final String ADMIN_PAGE = "";
	public Navigator navigator;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AdminPage() {
		// TODO add user code here
		 buildMainLayout();
		 setCompositionRoot(mainLayout);
//		 final Navigator adminPageNavigator = new Navigator(JrsiiUI.getCurrent(), horizontalLayout_Main);
		 panel_Content.setCaption("Administrator Page");
		 
		try {
			 button_administrator.addClickListener(new Button.ClickListener() {
					@Override
					public void buttonClick(ClickEvent event) {
						navigator.addView(Admin_KennwortAendern.ADMIN_KENNWORT_AENDERN, new Admin_KennwortAendern());
						navigator.navigateTo(Admin_KennwortAendern.ADMIN_KENNWORT_AENDERN);
//						JrsiiUI.getCurrent().setContent(new Admin_KennwortAendern());
					}
				});
		} catch (Exception e) {
			e.printStackTrace();
		}
		 

		 
		try {
			button_neueBenutzerHinzufgen.addClickListener(new Button.ClickListener() {
				@Override
				public void buttonClick(ClickEvent event) {
//					JrsiiUI.getCurrent().setContent(new Admin_NeueBenutzerHinzufuegen());
					navigator.addView(Admin_NeueBenutzerHinzufuegen.ADMIN_NEUE_BENUTZER_HINZUFUEGEN, new Admin_NeueBenutzerHinzufuegen());
					navigator.navigateTo(Admin_NeueBenutzerHinzufuegen.ADMIN_NEUE_BENUTZER_HINZUFUEGEN);
					
				}
			});
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		try {
			button_benutzerEntfernen.addClickListener(new Button.ClickListener() {
				
				@Override
				public void buttonClick(ClickEvent event) {
					navigator.addView(Admin_BenutzerEntfernen.ADMIN_BENUTZER_EINTEFREN, new Admin_BenutzerEntfernen());
					navigator.navigateTo(Admin_BenutzerEntfernen.ADMIN_BENUTZER_EINTEFREN);
					
				}
			});
		} catch (Exception e) {
			e.printStackTrace();
		}
		 
		
		
		try {
			
			button_abmelden.addClickListener(new Button.ClickListener() {
				
				@Override
				public void buttonClick(ClickEvent event) {
					JrsiiUI.getCurrent().setContent(new Login());
					
				}
			});
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// horizontalLayout_Main
		horizontalLayout_Main = buildHorizontalLayout_Main();
		mainLayout.addComponent(horizontalLayout_Main,
				"top:0.0px;right:-5.0px;bottom:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_Main() {
		// common part: create layout
		horizontalLayout_Main = new HorizontalLayout();
		horizontalLayout_Main.setImmediate(false);
		horizontalLayout_Main.setWidth("100.0%");
		horizontalLayout_Main.setHeight("100.0%");
		horizontalLayout_Main.setMargin(false);
		
		// verticalLayout_Left
		verticalLayout_Left = buildVerticalLayout_Left();
		horizontalLayout_Main.addComponent(verticalLayout_Left);
		horizontalLayout_Main.setExpandRatio(verticalLayout_Left, 0.45f);
		
		// verticalLayout_Right
		verticalLayout_Right = buildVerticalLayout_Right();
		horizontalLayout_Main.addComponent(verticalLayout_Right);
		horizontalLayout_Main.setExpandRatio(verticalLayout_Right, 1.0f);
		
		return horizontalLayout_Main;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_Left() {
		// common part: create layout
		verticalLayout_Left = new VerticalLayout();
		verticalLayout_Left.setImmediate(false);
		verticalLayout_Left.setWidth("100.0%");
		verticalLayout_Left.setHeight("100.0%");
		verticalLayout_Left.setMargin(false);
		
		// button_administrator
		button_administrator = new Button();
		button_administrator.setCaption("Administrator");
		button_administrator.setImmediate(true);
		button_administrator.setWidth("-1px");
		button_administrator.setHeight("-1px");
		verticalLayout_Left.addComponent(button_administrator);
		verticalLayout_Left.setExpandRatio(button_administrator, 1.0f);
		verticalLayout_Left.setComponentAlignment(button_administrator,
				new Alignment(34));
		
		// button_neueBenutzerHinzufgen
		button_neueBenutzerHinzufgen = new Button();
		button_neueBenutzerHinzufgen.setCaption("Neue benutzer hinzufügen");
		button_neueBenutzerHinzufgen.setImmediate(true);
		button_neueBenutzerHinzufgen.setWidth("-1px");
		button_neueBenutzerHinzufgen.setHeight("-1px");
		verticalLayout_Left.addComponent(button_neueBenutzerHinzufgen);
		verticalLayout_Left.setExpandRatio(button_neueBenutzerHinzufgen, 1.0f);
		verticalLayout_Left.setComponentAlignment(button_neueBenutzerHinzufgen,
				new Alignment(34));
		
		// button_benutzerEntfernen
		button_benutzerEntfernen = new Button();
		button_benutzerEntfernen.setCaption("Benutzer erntfernen");
		button_benutzerEntfernen.setImmediate(true);
		button_benutzerEntfernen.setWidth("-1px");
		button_benutzerEntfernen.setHeight("-1px");
		verticalLayout_Left.addComponent(button_benutzerEntfernen);
		verticalLayout_Left.setExpandRatio(button_benutzerEntfernen, 1.0f);
		verticalLayout_Left.setComponentAlignment(button_benutzerEntfernen,
				new Alignment(34));
		
		// button_abmelden
		button_abmelden = new Button();
		button_abmelden.setCaption("Abmelden");
		button_abmelden.setImmediate(true);
		button_abmelden.setWidth("-1px");
		button_abmelden.setHeight("-1px");
		verticalLayout_Left.addComponent(button_abmelden);
		verticalLayout_Left.setExpandRatio(button_abmelden, 1.0f);
		verticalLayout_Left.setComponentAlignment(button_abmelden,
				new Alignment(6));
		
		return verticalLayout_Left;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_Right() {
		// common part: create layout
		verticalLayout_Right = new VerticalLayout();
		verticalLayout_Right.setImmediate(false);
		verticalLayout_Right.setWidth("100.0%");
		verticalLayout_Right.setHeight("100.0%");
		verticalLayout_Right.setMargin(false);
		
		// panel_Content
		panel_Content = buildPanel_Content();
		verticalLayout_Right.addComponent(panel_Content);
		verticalLayout_Right.setExpandRatio(panel_Content, 1.0f);
		
		return verticalLayout_Right;
	}

	@AutoGenerated
	private Panel buildPanel_Content() {
		// common part: create layout
		panel_Content = new Panel();
		panel_Content.setImmediate(false);
		panel_Content.setWidth("100.0%");
		panel_Content.setHeight("100.0%");
		
		// verticalLayout_Panel
		verticalLayout_Panel = new VerticalLayout();
		verticalLayout_Panel.setImmediate(false);
		verticalLayout_Panel.setWidth("100.0%");
		verticalLayout_Panel.setHeight("100.0%");
		verticalLayout_Panel.setMargin(false);
		panel_Content.setContent(verticalLayout_Panel);
		
		return panel_Content;
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		navigator = event.getNavigator();
		
	}

}
