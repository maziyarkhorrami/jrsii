package com.jrsii.view.frontend;

import javax.persistence.EntityManager;

import com.jrsii.data.DataLogin;
import com.jrsii.entities.Benutzer;
import com.jrsii.main.JrsiiUI;
import com.jrsii.view.backend.AdminPage;
import com.vaadin.addon.jpacontainer.JPAContainerFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.CustomLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Panel;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class Login extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	private static Benutzer benutzerTemp;
	public static final String LOGIN_PAGE  = "loginPage";
	public Navigator navigator;
	public static final String PERSISTANCE_UNIT = "jrsdbmysql";

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public Login() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		Panel loginPanel = new Panel(); 
		loginPanel.setSizeUndefined();
		verticalLayout_1.addComponent(loginPanel);
		CustomLayout panelCustomLayout = new CustomLayout("LoginFormLayout"); 

		final TextField usernameTxt = new TextField();
		final PasswordField passwordTxt = new PasswordField();

		Button loginBut = new Button("Anmelden");    
		loginBut.addClickListener(new Button.ClickListener() {
			public void buttonClick(ClickEvent event) {
				String usernameStr = usernameTxt.getValue();
				String passwordStr = passwordTxt.getValue(); 
				EntityManager em = JPAContainerFactory.createEntityManagerForPersistenceUnit(PERSISTANCE_UNIT);
				
				javax.persistence.Query q = em.createQuery("FROM Benutzer b WHERE b.benutzername = ?1 AND  b.kennwort = ?2 ");
					q.setParameter(1, usernameStr);
					q.setParameter(2, passwordStr);
					q.setMaxResults(1);

					try {
						Benutzer benutzer = (Benutzer) q.getSingleResult();
						if (benutzer != null) {
							if (benutzer.getEnabled()) {
								DataLogin.dataBenutzername = usernameStr;
								DataLogin.dataKennwort = passwordStr;
								if(benutzer.getAdmin()) {
									Login.setBenutzer(benutzer);
									navigator.addView(AdminPage.ADMIN_PAGE, new AdminPage());
									navigator.navigateTo(AdminPage.ADMIN_PAGE);
//									JrsiiUI.getCurrent().setContent(new AdminPage());
								} else { 
									 Login.setBenutzer(benutzer);
									 navigator.addView(com.jrsii.main.frontend.user.UserHomePage.USER_HOME_PAGE, new com.jrsii.main.frontend.user.UserHomePage());
									 navigator.navigateTo(com.jrsii.main.frontend.user.UserHomePage.USER_HOME_PAGE);
//									 JrsiiUI.getCurrent().setContent(new UserHomePage());
								} } else {
								JrsiiUI.getCurrent().setContent(new JrsiiUI());
								Notification.show("The user is not registered yet",Type.ERROR_MESSAGE);
							}
						   } else {Notification.show("Wrong username password",Type.ERROR_MESSAGE);
						}
					} catch (Exception e) {
						e.printStackTrace();
						Notification.show("Incorrect Username or assword", Type.ERROR_MESSAGE);
//						setContent( new JrsiiUI());
						
					}
				
			}
		});
		panelCustomLayout.addComponent(usernameTxt, "username");
		panelCustomLayout.addComponent(passwordTxt, "password");
		panelCustomLayout.addComponent(loginBut, "okbutton");

		loginPanel.setContent(panelCustomLayout);
	}
	

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		navigator = event.getNavigator();
		
	}
	public static Benutzer getBenutzer() {
		return benutzerTemp;
	}

	public static void setBenutzer(Benutzer benutzerTemp) {
		Login.benutzerTemp = benutzerTemp;
	}


	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("100.0%");
		verticalLayout_1.setMargin(false);
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}


}
